language: cpp
dist: xenial
sudo: false

matrix:
  include:
  - name: "Linux gcc5.4 Release"
    os: linux
    compiler: gcc
    env:
      - COMPILER_CC=gcc
      - COMPILER_CXX=g++
      - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
  - name: "macOS Xcode10"
    os: osx
    osx_image: xcode10
    compiler: clang
    env: 
      - COMPILER_CC=clang
      - COMPILER_CXX=clang++
      - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
  - name: "Linux gcc5.4 Code Coverage"
    os: linux
    compiler: gcc
    env:
      - COMPILER_CC=gcc
      - COMPILER_CXX=g++
      - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_CODE_COVERAGE=ON"
    before_script:
      - pip install --user cpp-coveralls
    after_success:
      - coveralls --root ${TRAVIS_BUILD_DIR} --build-root ${TRAVIS_BUILD_DIR}/build --gcov-options '\-lp' -e build/3rdparty -e build/_deps -e build/CMakeFiles

notifications:
  email:
    on_success: never
    on_failure: always

install:
- echo ${PATH}
- cmake --version
- export CC=${COMPILER_CC}
- export CXX=${COMPILER_CXX}
- ${CC} --version
- ${CC} -v
- ${CXX} --version
- ${CXX} -v

script:
- mkdir -p build && cd build
- cmake ${CMAKE_OPTIONS} .. && make -j4
- CTEST_OUTPUT_ON_FAILURE=1 ctest -j4

